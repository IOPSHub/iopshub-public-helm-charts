{{- if .Values.scaledJob.enabled -}}
apiVersion: keda.sh/v1alpha1
kind: ScaledJob
metadata:
  name: {{include "base-chart.fullname" .}}
  labels:
    {{- include "base-chart.labels" . | nindent 4 }}
  {{- with .Values.scaledJobAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  jobTargetRef:
    parallelism: {{ .Values.jobTargetRef.parallelism }} 
    completions: {{ .Values.jobTargetRef.completions }}
    activeDeadlineSeconds: {{ .Values.jobTargetRef.activeDeadlineSeconds }}
    backoffLimit: {{ .Values.jobTargetRef.backoffLimit }}
    template:
      metadata:
        {{- with .Values.podAnnotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        labels:
          {{- include "base-chart.selectorLabels" . | nindent 10 }}
      spec:
        {{- with .Values.imagePullSecrets }}
        imagePullSecrets:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        serviceAccountName: {{ include "base-chart.serviceAccountName" . }}
        securityContext:
          {{- toYaml .Values.podSecurityContext | nindent 10 }}
        containers:
          - name: {{ include "base-chart.fullname" . }}
            {{- if and .Values.appConfigmap.enabled .Values.appSecrets.enabled }}
            envFrom:
              - configMapRef:
                  name: {{ include "base-chart.fullname" . }}
              - secretRef:
                  name: {{ include "base-chart.fullname" . }}
            {{- else if .Values.appConfigmap.enabled }}
            envFrom:
              - configMapRef:
                  name: {{ include "base-chart.fullname" . }}
            {{- else if .Values.appSecrets.enabled }}
            envFrom:
              - secretRef:
                  name: {{ include "base-chart.fullname" . }}
            {{- end }}
            securityContext:
              {{- toYaml .Values.securityContext | nindent 14 }}
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            {{- if .Values.command }}
            command: 
              {{- range .Values.command }}
                - {{ . }}
              {{- end }}
            {{- end }}
            resources:
              {{- toYaml .Values.resources | nindent 14 }}
        {{- with .Values.nodeSelector }}
        nodeSelector:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.affinity }}
        affinity:
          {{- tpl . $ | nindent 10 }}
        {{- end }}
        {{- with .Values.tolerations }}
        tolerations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
  pollingInterval: {{ .Values.scaledJob.pollingInterval }} 
  successfulJobsHistoryLimit: {{ .Values.scaledJob.successfulJobsHistoryLimit }} 
  failedJobsHistoryLimit: {{ .Values.scaledJob.failedJobsHistoryLimit }} 
  minReplicaCount: {{ .Values.scaledJob.minReplicaCount }} 
  maxReplicaCount: {{ .Values.scaledJob.maxReplicaCount }} 
  # rollout:
  #   strategy: {{ .Values.scaledJob.rollout.strategy }}
  #   propagationPolicy: {{ .Values.scaledJob.rollout.propagationPolicy }}
#   scalingStrategy:
#     strategy: "custom" # Optional. Default: default. Which Scaling Strategy to use.
#     customScalingQueueLengthDeduction: 1 # Optional. A parameter to optimize custom ScalingStrategy.
#     customScalingRunningJobPercentage: "0.5" # Optional. A parameter to optimize custom ScalingStrategy.
#     pendingPodConditions: # Optional. A parameter to calculate pending job count per the specified pod conditions
#       - "Ready"
#       - "PodScheduled"
#       - "AnyOtherCustomPodCondition"
#     multipleScalersCalculation: "max" # Optional. Default: max. Specifies how to calculate the target metrics when multiple scalers are defined.
  
  {{- with .Values.scaledJob.triggers }}
  triggers:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}